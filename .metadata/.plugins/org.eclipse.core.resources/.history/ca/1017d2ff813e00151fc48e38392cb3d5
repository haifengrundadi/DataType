/*
 * LeetCode005.cpp
 *
 *  Created on: 2015年8月4日
 *      Author: juanecho
 */

#include "leetcode.h"
#include<stdint.h>
class Solution {
public:
	bool isIsomorphic(string s, string t) {
		bool flag1 = true;
		int len = s.length();
		map<int,int> m;
		for(int i = 0; i < len; i++){
			if(m.find(s[i]) == m.end() ){
				m.insert(pair<int,int>(s[i],t[i]));
//				cout<<s[i]<<"---"<<t[i]<<endl;
			}else{
				if(m.find(s[i])->second != t[i]){
					flag1 =  false;
					break;
				}
			}
		}

		bool flag2 = true;
				int len1 = t.length();
				map<int,int> m1;
				for(int i = 0; i < len1; i++){
					if(m1.find(t[i]) == m1.end() ){
						m1.insert(pair<int,int>(t[i],s[i]));
		//				cout<<s[i]<<"---"<<t[i]<<endl;
					}else{
						if(m1.find(t[i])->second != s[i]){
							flag2= false;
							break;
						}
					}
				}
		return flag1 * flag2;
	 }
};

int main(){
	Solution * s= new Solution();
	cout<<s->isIsomorphic("paper","title");
	return 0;
}
