/*
 * LeetCode005.cpp
 *
 *  Created on: 2015年8月4日
 *      Author: juanecho
 */

#include "leetcode.h"

class Solution {
public:
	 vector<int> productExceptSelf(vector<int>& nums) {
		 	 vector<int> output;
		 	 int size = nums.size();
		 	 if(size <= 1) return nums;
		 	 //求outpu[0]的值
		 	 int i = 1;
		 	 int tem = 1;
		 	 while(i < size){
		 		 tem *= nums[i];
		 		 i++;
		 	 }
		 	 output.push_back(tem);
		 	 //求output[1]---output[n-1]
		 	 i = 1;
		 	 while(i < size){
		 		 output[i] = nums[i-1]  * output[i -1] / nums[i];
		 		 i++;
		 	 }
		 	 i=0;
		 	 while(i < size){
		 		 cout<<nums[i]<<"\t";
		 		 i++;
		 	 }
		 	 cout<<endl;
		 	 return output;
	 }
};

int main(){
	Solution * s= new Solution();
	vector<int> v;
	int nums[] = {1,2,3,4};
	for( int i =0; i < sizeof(nums) / sizeof(int); i++){
		v.push_back(nums[i]);
	}
	s->productExceptSelf(v);
	return 0;
}
