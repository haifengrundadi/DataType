/*
 * LeetCode005.cpp
 *
 *  Created on: 2015年8月4日
 *      Author: juanecho
 */

#include "leetcode.h"

class Solution {
public:
	 string convert(string s, int numRows) {
	  string str1 = "";
	  vector<vector<char> > v;
	  vector<char> v_in;
	  for(int i = 0; i < numRows; i++){
		  v.push_back(v_in);
	  }
	  cout<<v.size()<<endl;
	  int len = s.length();
	  int i = 0, d = 1, k = 0;
	  if(len == 0 || numRows <= 1) return s;
	  while(i < len){
		  while(d == 1 && i < len && k <numRows){
			  cout<<s[i]<<"\t";
			  v[i%numRows].push_back(s[i]);
			  k++;
			  i++;
		  }
		  cout<<endl;
		  while(d == 0 && i < len && k < numRows - 2){
			  cout<<s[i]<<"\t";
			  v[numRows - k -1].push_back(s[i]);
			  i++;
			  k++;
		  }
		  cout<<endl;
		  d = d == 1?0:1;
		  k = 0;
	  }
	  vector<char>::iterator it;
	  for(int i = 0 ; i < numRows; i++){
		  cout<<"v"<<"\t"<<i<<"--"<<v[i].size()<<endl;
		  for(it = v[i].begin(); it!=v[i].end();it++){
			  str1+=*it;
		  }
		  cout<<str1<<endl;
	  }
	  return str1;
  }
};

int main()
{
	Solution * s= new Solution();
	string str = "PAYPALISHIRING";
	cout<<s->convert(str, 3);
	return 0;
}
