/*
 * SeqQueue.h
 *
 *  Created on: 2015年7月28日
 *      Author: juanecho
 */

#ifndef HEADER_SEQQUEUE_H_
#define HEADER_SEQQUEUE_H_
#include "Queue.h"
template <typename T>
class SeqQueue:public Queue<T>
{
public:
	SeqQueue(int sz = 10);
	~SeqQueue(){delete[] elements;}
	bool EnQueue(const T& x);
	//若堆列不满，则将x入队，否则溢出
	bool  DeQueue(T& x);
	void makeEmpty()
	{
		front = rear = 0;
	}
	bool getFront(T& x);
	bool IsEmpty()const
	{
		return (front == rear)?true:false;
	}
	bool IsFull()const
	{
		return ((rear+1)%maxSize == front)?true:false;
	}
	int getSize()const
	{
		return (rear - front + maxSize)%maxSize;
	}
private:
	int rear, front;
	T* elements;
	int maxSize;
};




#endif /* HEADER_SEQQUEUE_H_ */
