#include "leetcode.h"

class Solution {
public:
	vector<vector<int> > threeSum(vector<int>& nums) {
		vector<vector<int> > v;
		int size = nums.size();
		if(size <= 2) return v;

		return v;
	}
};

int main(){
	Solution *s = new Solution();
	vector<vector<int> > v;
	vector<int> nums;
	int arr[] = {-1,0,1,2,-1,-4};
	for(int i =0; i < sizeof(arr)/ sizeof(int); i++){
		nums.push_back(arr[i]);
	}
	v = s->threeSum(nums);
	int size = v.size();
	vector<int>::iterator it;
	vector<int> tem;
	for(int i =0; i < size;i++){
		tem.clear();
		tem = v[i];
		for(it = tem.begin(); it != tem.end();tem++){
		}
	}
}
