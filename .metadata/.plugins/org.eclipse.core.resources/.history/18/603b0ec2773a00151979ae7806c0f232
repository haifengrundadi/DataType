/*
 * LeetCode002.cpp
 *
 *  Created on: 2015年8月4日
 *      Author: juanecho
 */

#include<iostream>
using namespace std;

struct ListNode {
     int val;
     ListNode *next;
     ListNode(int x) : val(x), next(NULL) {}
};
class Solution {
public:
	ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)
	{
		if(l1 == NULL)
			return l2;
		if(l2 == NULL)
			return l1;
		int flag = 0;
		int sum = 0;
 		ListNode* newList;
 		ListNode* high;
		ListNode* first;
		while(l1!=NULL && l2 != NULL)
		{
			cout<<"---2  ---"<<endl;
			sum = l1->val + l2->val;
			if(sum >= 10)
			{
				if(l1->next == NULL)
				{
					high =new ListNode(1);
				}
				flag = 1;
				sum = sum % 10;
			}
			newList =new ListNode(sum);
			first->next = newList;
			first = newList;
			if(high != NULL)
			{
				first->next = high;
				return newList;
			}
			flag = 0;
			l1 = l1->next;
			l2= l2->next;
		}

		return newList;
	}

	/*ListNode* createList(int  nums[],int n)
	{
		int i = 0;
		ListNode * l1;
		while(i < n)
		{
			//cur = l1;
			l1 = new ListNode(nums[i]);
			i++;
			l1->next = cur;
		}
	}*/
};
int main()
{
	Solution *s = new Solution();
	ListNode * result;
	ListNode * l1 =new ListNode(2);
	ListNode * l11 =new ListNode(4);
	ListNode * l12 =new ListNode(3);
	l1->next = l11;
	l11->next = l12;
	ListNode * l2 =new ListNode(5);
	ListNode * l21 =new ListNode(6);
	ListNode * l22 =new ListNode(4);
	l2->next = l21;
	l21->next = l22;
	cout<<"------"<<endl;
	result = s->addTwoNumbers(l1,l2);
	cout<<"------"<<endl;
	while(result!= NULL)
	{
		cout<<result->val<<"\t";
		result = result->next;
	}
	return 0;
};



