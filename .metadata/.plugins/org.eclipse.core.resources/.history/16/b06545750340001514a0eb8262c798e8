/*
 * LeetCode155.cpp
 *
 *  Created on: 2015年8月11日
 *      Author: juanecho
 */
#include"leetcode.h"

class MinStack {
public:
    void push(int x) {
    	if(!s.empty()){
    		min = min <= x? min:x;
    		s.push(x);
    	}else if(!s1.empty()){
    		min = min <= x? min:x;
    		 s1.push(x);
    	}else{
    		min = x;
    		s.push(x);
    	}
    }

    void pop() {
    	int top = 0, i = 0;
    	if(!s.empty()){
    		top = s.top();
    		 s.pop();
    		if(min == top){
    			min = s.top();
    			while(i < s.size()){
    				min = min <= s.top()? min:s.top();
    				s1.push(s.top());
    				s.pop();
    				i++;
    			}
    		}
    	}else if(!s1.empty()){
    		top = s1.top();
    		 s1.pop();
    		if(min == top){
    			min = s1.top();
    			while(i < s1.size()){
    				min = min <= s1.top()? min:s1.top();
    				s.push(s1.top());
    				s1.pop();
    				i++;
    			}
    		}
    	}
    }

    int top() {
    	if(!s.empty())
    		return s.top();
    	else
    	    return s1.top();
    }

    int getMin() {
    	return min;
    }
private:
    stack<int> s;
    stack<int> s1;
    int min;
};

int main(){
		stack<int> s;
		MinStack *m = new MinStack();
	    m->push(2147483646);
	    m->push(2147483646);
	    m->push(2147483647);
	    cout<<m->top()<<endl;
	    m->pop();
	    cout<<m->getMin()<<endl;
	    m->pop();
	    cout<<m->getMin()<<endl;
	    m->pop();
	    m->push(2147483647);
	    m->top();
	    cout<<m->getMin();
	    m->push(-2147483648);
	    m->top();
	    cout<<m->getMin()<<endl;
	    m->pop();
	    cout<<m->getMin()<<endl;
	    return 0;
}
